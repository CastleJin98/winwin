<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.winwin.mapper.admin.AdminMapper">

    <!--  검색한 회원 조회  -->
    <select id="getUserInfo" parameterType="adminUserSearchVo" resultType="adminVo">
        SELECT WU.USER_NAME,
        WU.USER_NUMBER,
        WU.USER_ID,
        MC.MAIN_NAME,
        WU.USER_RRNUMBER,
        WU.USER_PHONE_NUMBER,
        M.MENTOR_STATUS,
        wu.user_position,
        WU.USER_STATUS
        FROM WW_USER WU
        LEFT OUTER JOIN MENTOR M on WU.user_number = M.USER_NUMBER
        LEFT OUTER JOIN SUB_CATEGORY SB on M.SUB_NUMBER = SB.SUB_NUMBER
        LEFT OUTER JOIN MAIN_CATEGORY MC on SB.MAIN_CODE = MC.MAIN_CODE
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="id != null and id != ''">
                AND USER_ID LIKE '%' || #{id} || '%'
            </if>
            <if test="identity != null and identity != ''">
                AND USER_IDENTITY LIKE '%' || #{identity} || '%'
            </if>
            <if test="mainCode != null and mainCode != ''">
                AND SB.MAIN_CODE LIKE '%' || #{mainCode} || '%'
            </if>
            <if test="position != null and position != ''">
                AND USER_POSITION LIKE '%' || #{position} || '%'
            </if>
        </trim>
    </select>

    <!--  전체 회원 조회  -->
    <select id="selectTest" resultType="adminVo">
        SELECT WU.USER_NAME,
               WU.USER_NUMBER,
               WU.USER_ID,
               MC.MAIN_NAME,
               WU.USER_RRNUMBER,
               WU.USER_PHONE_NUMBER,
               M.MENTOR_STATUS,
               wu.user_position,
               WU.USER_STATUS
        FROM WW_USER WU
                 LEFT OUTER JOIN MENTOR M on WU.user_number = M.USER_NUMBER
                 LEFT OUTER JOIN SUB_CATEGORY SB on M.SUB_NUMBER = SB.SUB_NUMBER
                 LEFT OUTER JOIN MAIN_CATEGORY MC on SB.MAIN_CODE = MC.MAIN_CODE
        WHERE user_status != 'a'
    </select>


    <!--  전체 게시판 조회  -->
    <select id="selectBoard" resultType="adminVo">
        SELECT c.COMMUNITY_NUMBER,
               CC.CATEGORY_NAME,
               C.COMMUNITY_TITLE,
               WU.USER_NAME,
               C.COMMUNITY_DATE,
               C.COMMUNITY_STATUS
        FROM COMMUNITY C
                 LEFT OUTER JOIN COMMUNITY_CATEGORY CC ON C.category_number = CC.category_number
                 LEFT OUTER JOIN WW_USER WU on C.user_number = WU.user_number
    </select>

    <!--  검색한 게시판 조회  -->
    <select id="selectSearchBoard" resultType="adminVo" parameterType="adminBoardSearchVo">
        SELECT
        c.COMMUNITY_NUMBER,
        CC.CATEGORY_NAME,
        C.COMMUNITY_TITLE,
        WU.USER_NAME,
        C.COMMUNITY_DATE,
        C.COMMUNITY_STATUS
        FROM COMMUNITY C
        LEFT OUTER JOIN COMMUNITY_CATEGORY CC ON C.category_number = CC.category_number
        LEFT OUTER JOIN WW_USER WU on C.user_number = WU.user_number
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="name != null and name != ''">
                AND WU.USER_NAME LIKE '%' || #{name} || '%'
            </if>
            <if test="categoryCode != null and categoryCode != ''">
                AND C.CATEGORY_NUMBER LIKE '%' || #{categoryCode} || '%'
            </if>
            <if test="communityDate != null and communityDate != ''">
                AND TRUNC(C.COMMUNITY_DATE) = TO_DATE(#{communityDate}, 'YYYY-MM-DD') <!-- DB형식이 SYSDATE일 경우 -->
            </if>
            <if test="status != null and status != ''">
                AND C.COMMUNITY_STATUS LIKE '%' || #{status} || '%'
            </if>
        </trim>
    </select>


    <!-- 전체 윙 조회 -->
    <select id="selectWing" resultType="adminVo">
        SELECT WU.USER_NAME,
               WU.USER_ID,
               WU.USER_WING,
               W.WING_EARN_DATE,
               M.MENTOR_STATUS,
               wu.user_position
        FROM WW_USER WU
                 LEFT OUTER JOIN WING W on WU.user_number = W.USER_NUMBER
                 LEFT OUTER JOIN MENTOR M on W.user_number = M.USER_NUMBER
    </select>

    <!--  검색한 윙 조회  -->
    <select id="selectSearchWing" parameterType="adminWingSearchVo" resultType="adminVo">
        SELECT
        WU.USER_NAME,
        WU.USER_ID,
        WU.USER_WING,
        W.WING_EARN_DATE,
        MENTOR_STATUS,
        wu.user_position
        FROM WW_USER WU
        LEFT OUTER JOIN WING W on WU.user_number = W.USER_NUMBER
        LEFT OUTER JOIN MENTOR M ON WU.USER_NUMBER = M.USER_NUMBER
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="name != null and name != ''">
                AND WU.USER_NAME LIKE '%' || #{name} || '%'
            </if>
            <if test="id != null and id != ''">
                AND USER_ID LIKE '%' || #{id} || '%'
            </if>
            <if test="date != null and date != ''">
                AND TRUNC(W.WING_EARN_DATE) = TO_DATE(#{date}, 'YYYY-MM-DD') <!-- DB형식이 SYSDATE일 경우 -->
            </if>
            <if test="position != null and position != ''">
                AND wu.USER_POSITION LIKE '%' || #{position} || '%'
            </if>
        </trim>
    </select>


    <!--  전제 진로 정보 조회  -->
    <select id="selectCareer" resultType="adminVo">
        SELECT c2.CAREERINFO_NUMBER,
               MC.MAIN_CODE,
               MAIN_NAME,
               CAREERINFO_TITLE,
               USER_NAME,
               CAREERINFO_DATE,
               CAREERINFO_STATUS
        FROM WW_USER WU
                 JOIN careerinfo c2 on WU.user_number = c2.user_number
                 LEFT OUTER JOIN MENTOR M on WU.user_number = M.USER_NUMBER
                 LEFT OUTER JOIN SUB_CATEGORY SB on M.SUB_NUMBER = SB.SUB_NUMBER
                 LEFT OUTER JOIN MAIN_CATEGORY MC on SB.MAIN_CODE = MC.MAIN_CODE
    </select>

    <!--  검색한 진로 정보 조회  -->
    <select id="selectSearchCareer" parameterType="adminCareerSearchVo" resultType="adminVo">
        SELECT c2.CAREERINFO_NUMBER,
        MC.MAIN_CODE,
        MAIN_NAME,
        CAREERINFO_TITLE,
        USER_NAME,
        CAREERINFO_DATE,
        CAREERINFO_STATUS
        FROM WW_USER WU
        JOIN careerinfo c2 on WU.user_number = c2.user_number
        JOIN MENTOR M on WU.user_number = M.USER_NUMBER
        JOIN SUB_CATEGORY SB on M.SUB_NUMBER = SB.SUB_NUMBER
        JOIN MAIN_CATEGORY MC on SB.MAIN_CODE = MC.MAIN_CODE
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="name != null and name != ''">
                AND WU.USER_NAME LIKE '%' || #{name} || '%'
            </if>
            <if test="mainCode != null and mainCode != ''">
                AND MC.MAIN_CODE LIKE '%' || #{mainCode} || '%'
            </if>
            <if test="date != null and date != ''">
                AND TRUNC(C2.CAREERINFO_DATE) = TO_DATE(#{date}, 'YYYY-MM-DD') <!-- DB형식이 SYSDATE일 경우 -->
            </if>
            <if test="status != null and status != ''">
                AND c2.CAREERINFO_STATUS LIKE '%' || #{status} || '%'
            </if>
        </trim>
    </select>

<!--  전체 나눔 조회  -->
    <select id="selectShare" resultType="adminVo">
    SELECT
    WU.USER_NAME,
    SHARE_NUMBER,
    SHARE_TITLE,
    SHARE_CONTENT,
    SHARE_DATE,
    share_status
    FROM WW_USER WU
    JOIN SHARE_FREE SF on WU.USER_NUMBER = SF.USER_NUMBER
    </select>

<!--  검색한 나눔 조회  -->
    <select id="selectSearchShare" parameterType="adminShareSearchVo" resultType="adminVo">
        SELECT
        WU.USER_NAME,
        SHARE_NUMBER,
        SHARE_TITLE,
        SHARE_CONTENT,
        SHARE_DATE,
        SHARE_STATUS
        FROM WW_USER wu
        JOIN SHARE_FREE SF on WU.USER_NUMBER = SF.USER_NUMBER
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="name != null and name != ''">
                AND WU.USER_NAME LIKE '%' || #{name} || '%'
            </if>
            <if test="title != null and title != ''">
                AND SF.SHARE_TITLE LIKE '%' || #{title} || '%'
            </if>
            <if test="shareDate != null and shareDate != ''">
                AND TRUNC(SF.SHARE_DATE) = TO_DATE(#{shareDate}, 'YYYY-MM-DD') <!-- DB형식이 SYSDATE일 경우 -->
            </if>
            <if test="status != null and status != ''">
                AND SF.SHARE_STATUS LIKE '%' || #{status} || '%'
            </if>
        </trim>
    </select>

    <!--  전체 게시글 신고 조회  -->
    <select id="selectReport" resultType="policeVo">
        SELECT POLICE_NUMBER, BC.BIG_NAME, BOARD_NUMBER, PC.CATEGORY_NAME, J1. USER_NUMBER,
               TO_CHAR(POLICE_DATE,'YYYY-MM-DD') AS POLICE_DATE,
               TITLE, STATUS,
               U.USER_NAME, U.USER_ID
        FROM (
                 SELECT POLICE_NUMBER, PB.BIG_CODE, BOARD_NUMBER, POLICE_CATEGORY, USER_NUMBER, POLICE_DATE,
                        C.TITLE, C.STATUS
                 FROM POLICE_BOARD PB
                          JOIN (
                     SELECT COMMUNITY_NUMBER, COMMUNITY_TITLE AS TITLE, COMMUNITY_STATUS AS STATUS, 400 AS BIG_CODE
                     FROM COMMUNITY
                 ) C
                               ON PB.BIG_CODE = C.BIG_CODE AND PB.BOARD_NUMBER = C.COMMUNITY_NUMBER

                 UNION ALL
                 SELECT POLICE_NUMBER, PB.BIG_CODE, BOARD_NUMBER, POLICE_CATEGORY, USER_NUMBER, POLICE_DATE,
                        Q.TITLE, Q.STATUS
                 FROM POLICE_BOARD PB
                          JOIN (
                     SELECT QNA_NUMBER, QNA_TITLE AS TITLE, QNA_STATUS AS STATUS, 300 AS BIG_CODE
                     FROM QNA
                 ) Q
                               ON PB.BIG_CODE = Q.BIG_CODE AND PB.BOARD_NUMBER = Q.QNA_NUMBER
                 UNION ALL
                 SELECT POLICE_NUMBER, PB.BIG_CODE, BOARD_NUMBER, POLICE_CATEGORY, USER_NUMBER, POLICE_DATE,
                        CI.TITLE, CI.STATUS
                 FROM POLICE_BOARD PB
                          JOIN (
                     SELECT CAREERINFO_NUMBER, CAREERINFO_TITLE AS TITLE, '0' AS STATUS, 200 AS BIG_CODE
                     FROM CAREERINFO
                 ) CI
                               ON PB.BIG_CODE = CI.BIG_CODE AND PB.BOARD_NUMBER = CI.CAREERINFO_NUMBER
                 UNION ALL
                 SELECT POLICE_NUMBER, PB.BIG_CODE, BOARD_NUMBER, POLICE_CATEGORY, USER_NUMBER, POLICE_DATE,
                        S.TITLE, S.STATUS
                 FROM POLICE_BOARD PB
                          JOIN (
                     SELECT STUDY_NUMBER, STUDY_TITLE AS TITLE, STUDY_STATUS AS STATUS, 500 AS BIG_CODE
                     FROM STUDY
                 ) S
                               ON PB.BIG_CODE = S.BIG_CODE AND PB.BOARD_NUMBER = S.STUDY_NUMBER
                 UNION ALL
                 SELECT POLICE_NUMBER, PB.BIG_CODE, BOARD_NUMBER, POLICE_CATEGORY, USER_NUMBER, POLICE_DATE,
                        SH.TITLE, SH.STATUS
                 FROM POLICE_BOARD PB
                          JOIN (
                     SELECT SHARE_NUMBER, SHARE_TITLE AS TITLE, SHARE_STATUS AS STATUS, 600 AS BIG_CODE
                     FROM SHARE_FREE
                 ) SH
                               ON PB.BIG_CODE = SH.BIG_CODE AND PB.BOARD_NUMBER = SH.SHARE_NUMBER
             )J1
                 JOIN BIG_CATEGORY BC ON J1.BIG_CODE = BC.BIG_CODE
                 JOIN POLICE_CATEGORY PC ON J1.POLICE_CATEGORY = PC.CATEGORY_NUMBER
                 JOIN WW_USER U ON J1.USER_NUMBER = U.USER_NUMBER
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="userName != null and userName != ''">
                AND USER_NAME LIKE '%' || #{userName} || '%'
            </if>
            <if test="bigCode != null and bigCode != ''">
                AND J1.BIG_CODE LIKE '%' || #{bigCode} || '%'
            </if>
            <if test="categoryNumber != null and categoryNumber != ''">
                AND CATEGORY_NUMBER LIKE '%' || #{categoryNumber} || '%'
            </if>
            <if test="status != null and status != ''">
                AND STATUS LIKE '%' || #{status} || '%'
            </if>
        </trim>
        ORDER BY POLICE_DATE DESC
    </select>

    <!-- 검색한 게시글 신고 조회-->
<!--    <select id="selectSearchReport" parameterType="adminReportSearchVo" resultType="adminVo">-->
<!--        SELECT WU.USER_NUMBER,-->
<!--        pb.police_number as police_number,-->
<!--        WU.USER_NAME,-->
<!--        USER_ID,-->
<!--        big_name,-->
<!--        to_char(Pb.police_date, 'yyyy-mm-dd') as police_date,-->
<!--        PC.CATEGORY_NAME as category_name,-->
<!--        PB.BOARD_STATUS as status-->
<!--        FROM WW_USER WU-->
<!--        LEFT OUTER JOIN police_board pb on WU.user_number = pb.user_number-->
<!--        left outer join big_category bc on pb.big_code = bc.big_code-->
<!--        LEFT OUTER JOIN POLICE_CATEGORY PC ON PB.police_category = PC.category_number-->
<!--        <trim prefix="WHERE" prefixOverrides="AND">-->
<!--            <if test="name != null and name != ''">-->
<!--                AND WU.USER_NAME LIKE '%' || #{name} || '%'-->
<!--            </if>-->
<!--            <if test="bigCode != null and bigCode != ''">-->
<!--                AND bc.BIG_CODE LIKE '%' || #{bigCode} || '%'-->
<!--            </if>-->
<!--            <if test="code != null and code != ''">-->
<!--                AND PC.CATEGORY_NUMBER LIKE '%' || #{code} || '%'-->
<!--            </if>-->
<!--            <if test="status != null and status != ''">-->
<!--                AND BOARD_STATUS LIKE '%' || #{status} || '%'-->
<!--            </if>-->
<!--        </trim>-->
<!--    </select>-->

<!--  전체 댓글 신고 조회   -->
    <select id="selectReportComment" resultType="policeCommentVo">
<!--    SELECT WU.USER_NUMBER,-->
<!--           pc.police_NUMBER,-->
<!--    WU.USER_NAME,-->
<!--    USER_ID,-->
<!--    big_name,-->
<!--    Pc.comment_date,-->
<!--    PC2.CATEGORY_NAME as police_category_name,-->
<!--    pc.comment_status-->
<!--    FROM WW_USER WU-->
<!--    JOIN police_comment pc on WU.user_number = pc.user_number-->
<!--    join big_category bc on pc.big_code = bc.big_code-->
<!--    JOIN POLICE_CATEGORY PC2 on pc.police_category = PC2.category_number-->

        SELECT J1.POLICE_NUMBER, BC.BIG_NAME, COMMENT_NUMBER, PC.CATEGORY_NAME, J1. USER_NUMBER,
        TO_CHAR(COMMENT_DATE,'YYYY-MM-DD') AS COMMENT_DATE,
        CONTENT, STATUS,
        U.USER_NAME, U.USER_ID,
        BC.BIG_CODE
        FROM (
        SELECT POLICE_NUMBER, PM.BIG_CODE, CM.COMMENT_NUMBER, POLICE_CATEGORY, USER_NUMBER, COMMENT_DATE,
        CM.CONTENT, CM.STATUS
        FROM POLICE_COMMENT PM
        JOIN (
        SELECT COMMUNITY_COMMENT.COMMENT_NUMBER, COMMENT_CONTENT AS CONTENT, COMMUNITY_COMMENT_STATUS AS STATUS, 400 AS BIG_CODE
        FROM COMMUNITY_COMMENT
        ) CM
        ON PM.BIG_CODE = CM.BIG_CODE AND PM.COMMENT_NUMBER = CM.COMMENT_NUMBER

        UNION ALL
        SELECT POLICE_NUMBER, PM.BIG_CODE, QM.COMMENT_NUMBER, POLICE_CATEGORY, USER_NUMBER, COMMENT_DATE,
        QM.CONTENT, QM.STATUS
        FROM POLICE_COMMENT PM
        JOIN (
        SELECT QNA_COMMENT.COMMENT_NUMBER, COMMENT_CONTENT AS CONTENT, QNA_COMMENT_STATUS AS STATUS, 300 AS BIG_CODE
        FROM QNA_COMMENT
        ) QM
        ON PM.BIG_CODE = QM.BIG_CODE AND PM.COMMENT_NUMBER = QM.COMMENT_NUMBER
        UNION ALL
        SELECT POLICE_NUMBER, PM.BIG_CODE, SM.COMMENT_NUMBER, POLICE_CATEGORY, USER_NUMBER, COMMENT_DATE,
        SM.CONTENT, SM.STATUS
        FROM POLICE_COMMENT PM
        JOIN (
        SELECT STUDY_COMMENT.COMMENT_NUMBER, COMMENT_CONTENT AS CONTENT, STUDY_COMMENT_STATUS AS STATUS, 500 AS BIG_CODE
        FROM STUDY_COMMENT
        ) SM
        ON PM.BIG_CODE = SM.BIG_CODE AND PM.COMMENT_NUMBER = SM.COMMENT_NUMBER
        UNION ALL
        SELECT POLICE_NUMBER, PM.BIG_CODE, M.COMMENT_NUMBER, POLICE_CATEGORY, USER_NUMBER, COMMENT_DATE,
        M.CONTENT, M.STATUS
        FROM POLICE_COMMENT PM
        JOIN (
        SELECT CAREERINFO_COMMENT.COMMENT_NUMBER, COMMENT_CONTENT AS CONTENT, CAREER_COMMENT_STATUS AS STATUS, 200 AS BIG_CODE
        FROM CAREERINFO_COMMENT
        ) M
        ON PM.BIG_CODE = M.BIG_CODE AND PM.COMMENT_NUMBER = M.COMMENT_NUMBER

        )J1
        JOIN BIG_CATEGORY BC ON J1.BIG_CODE = BC.BIG_CODE
        JOIN POLICE_CATEGORY PC ON J1.POLICE_CATEGORY = PC.CATEGORY_NUMBER
        JOIN WW_USER U ON J1.USER_NUMBER = U.USER_NUMBER
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="userName != null and userName != ''">
                AND U.USER_NAME LIKE '%' || #{userName} || '%'
            </if>
            <if test="bigCode != null and bigCode != ''">
                AND bc.BIG_CODE LIKE '%' || #{bigCode} || '%'
            </if>
            <if test="categoryNumber != null and categoryNumber != ''">
                AND PC.CATEGORY_NUMBER LIKE '%' || #{categoryNumber} || '%'
            </if>
            <if test="status != null and status != ''">
                AND STATUS LIKE '%' || #{status} || '%'
            </if>
        </trim>
    </select>
<!--  검색한 댓글 신고 조회  -->
    <select id="selectSearchReportComment" parameterType="adminCommentReportSearchVo" resultType="adminVo">
        SELECT WU.USER_NUMBER,
               pc.police_number,
               WU.USER_NAME,
               USER_ID,
               big_name,
               Pc.comment_date,
               PC2.CATEGORY_NAME as police_category_name,
               pc.comment_status
        FROM WW_USER WU
                 LEFT OUTER JOIN police_comment pc on WU.user_number = pc.user_number
                 left outer join big_category bc on pc.big_code = bc.big_code
                 LEFT OUTER JOIN POLICE_CATEGORY PC2 on pc.police_category = PC2.category_number
        <trim prefix="WHERE" prefixOverrides="AND">
            <if test="name != null and name != ''">
                AND WU.USER_NAME LIKE '%' || #{name} || '%'
            </if>
            <if test="bigCode != null and bigCode != ''">
                AND bc.BIG_CODE LIKE '%' || #{bigCode} || '%'
            </if>
            <if test="code != null and code != ''">
                AND PC2.CATEGORY_NUMBER LIKE '%' || #{code} || '%'
            </if>
            <if test="status != null and status != ''">
                AND COMMENT_STATUS LIKE '%' || #{status} || '%'
            </if>
        </trim>
    </select>


    <!--  게시판(커뮤니티) 상태 변경  -->
    <update id="updateStatus">
        update COMMUNITY
        set COMMUNITY_STATUS = #{communityStatus}
        where COMMUNITY_NUMBER = #{communityNumber}
    </update>

    <!--  게시판(진로정보) 상태 변경  -->
    <update id="updateCareer">
        update CAREERINFO
        set CAREERINFO_STATUS = #{careerInfoStatus}
        where CAREERINFO_NUMBER = #{careerInfoNumber}
    </update>

<!--  게시판(나눔) 상태 변경  -->
    <update id="updateShare">
        update SHARE_FREE
        set SHARE_STATUS = #{shareStatus}
        where SHARE_NUMBER = #{shareNumber}
    </update>

<!--  회원 상태 변경  -->
        <update id="updateUser">
            update WW_USER
            set USER_STATUS = #{userStatus}
            where USER_NUMBER = #{userNumber}
        </update>

<!-- 신고 게시글 상태 변경  -->
    <update id="updateBoard">
        update police_board
        set board_status = #{boardStatus}
        where police_number = #{policeNumber}
    </update>

<!-- 신고 댓글(커뮤니티) 상태 변경  -->
         <update id="updateCommunityReport">
             update community_comment
            set community_comment_status = #{status}
            where comment_number = #{commentNumber}
         </update>

<!--  신고 댓글(QnA) 상태 변경  -->
<!--  <update id="updateQnaCommentReport">-->
<!--       -->
<!--  </update>-->


<!--  게시글 신고 상태 변경  -->

    <!-- 게시글 진로정보 mainCategory 정보 가져오기 -->
    <select id="getCateDep" resultType="mainCategoryVo">
        SELECT *
        FROM MAIN_CATEGORY mc
        WHERE MAIN_CODE LIKE '1__'
    </select>

    <select id="getCateJob" resultType="mainCategoryVo">
        SELECT *
        FROM MAIN_CATEGORY mc
        WHERE MAIN_CODE LIKE '2__'
    </select>

</mapper>

