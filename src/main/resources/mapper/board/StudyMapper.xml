<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.winwin.mapper.board.StudyMapper">

    <!--프로젝트, 모임 게시물 작성-->
    <insert id="studyInsert">
        <selectKey keyProperty="studyNumber" order="BEFORE" resultType="long">
            SELECT SEQ_STUDY.NEXTVAL FROM DUAL
        </selectKey>
        insert into STUDY (STUDY_NUMBER, STUDY_TITLE, STUDY_CONTENT, STUDY_SUMMARY_TITLE, STUDY_SUMMARY_CONTENT, STUDY_ROLE, STUDY_OPENLINK, USER_NUMBER, CATEGORY_NUMBER, PURPOSE_NUMBER, TIME_NUMBER)
        values (#{studyNumber}, #{studyTitle}, #{studyContent}, #{studySummaryTitle}, #{studySummaryContent}, #{studyRole}, #{studyOpenlink}, #{userNumber}, #{categoryNumber}, #{purposeNumber}, #{timeNumber})
    </insert>

    <!--프로젝트,모임 게시글 수정-->
    <update id="studyUpdate"                  >
        UPDATE STUDY
        SET STUDY_TITLE = #{studyTitle}, STUDY_CONTENT = #{studyContent},STUDY_SUMMARY_TITLE = #{studySummaryTitle}, STUDY_SUMMARY_CONTENT = #{studySummaryContent}, STUDY_ROLE = #{studyRole}, STUDY_OPENLINK = #{studyOpenlink},  PURPOSE_NUMBER = #{purposeNumber}, CATEGORY_NUMBER =#{categoryNumber}, TIME_NUMBER = #{timeNumber}
        WHERE STUDY_NUMBER = #{studyNumber}
    </update>

    <!--프로젝트, 모임 게시글 삭제-->
    <delete id="studyDelete">
        DELETE FROM STUDY
        WHERE STUDY_NUMBER = #{studyNumber}
    </delete>

    <!--프로젝트,모임 게시물 READ 조회-->
    <select id="studySelect" resultType="studyVo">
        SELECT STUDY_NUMBER, STUDY_TITLE, STUDY_CONTENT, STUDY_SUMMARY_TITLE, STUDY_SUMMARY_CONTENT, STUDY_ROLE, STUDY_STATUS, STUDY_OPENLINK, STUDY_DATE, STUDY_READ_CNT,
               P.PFP_SYSTEM_NAME, P.PFP_UPLOAD_PATH, P.PFP_UUID,
               C.CATEGORY_NAME, R.PURPOSE_NAME, T.TIME_NAME,
               S.USER_NUMBER, U.USER_NICKNAME
        FROM STUDY S
                 JOIN WW_USER U
                      ON S.STUDY_NUMBER = 1 AND S.USER_NUMBER = U.USER_NUMBER
                 LEFT JOIN USER_PFP P
                           ON P.USER_NUMBER = S.USER_NUMBER
                 JOIN STUDY_CATEGORY C
                      ON C.CATEGORY_NUMBER = S.CATEGORY_NUMBER
                 JOIN STUDY_PURPOSE_CATEGORY R
                      ON R.PURPOSE_NUMBER = S.PURPOSE_NUMBER
                 JOIN STUDY_TIME_CATEGORY T
                      ON T.TIME_NUMBER = S.TIME_NUMBER
    </select>

    <select id="likeSelect" resultType="_int">
        SELECT COUNT(USER_NUMBER) FROM STUDY_LIKE
        WHERE USER_NUMBER = #{userNumber} AND STUDY_NUMBER = #{studyNumber}
    </select>
    
    <!--프로젝트, 모임 메인페이지 슬라이드 -->
    <select id="mainSelect" resultType="studyVo">
        SELECT S.STUDY_NUMBER, STUDY_TITLE, STUDY_SUMMARY_CONTENT,
               STUDY_STATUS, USER_NUMBER, CATEGORY_NUMBER, S.PURPOSE_NUMBER,
               P.PURPOSE_NAME,
               L.LIKE_CNT,
               DECODE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'), TO_CHAR(S.STUDY_DATE, 'YYYY-MM-DD'), 'T', 'F') AS IS_NEW
        FROM STUDY S JOIN STUDY_PURPOSE_CATEGORY P
                          ON S.STUDY_STATUS = '1' AND S.CATEGORY_NUMBER = #{cateNumber} AND S.PURPOSE_NUMBER = P.PURPOSE_NUMBER
                     LEFT JOIN (
            SELECT STUDY_NUMBER, COUNT(user_number) AS LIKE_CNT FROM STUDY_LIKE
            GROUP BY study_number
        ) L
                               ON S.STUDY_NUMBER = L.STUDY_NUMBER
        ORDER BY LIKE_CNT DESC
    </select>

</mapper>