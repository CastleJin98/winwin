<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.winwin.mapper.board.QnaCommentMapper">
    <insert id="insertQnaComment">
        <selectKey keyProperty="commentNumber" order="BEFORE" resultType="long">
            select SEQ_QNA_COMMENT.NEXTVAL from dual
        </selectKey>
        INSERT INTO QNA_COMMENT (COMMENT_NUMBER, COMMENT_CONTENT, QNA_NUMBER, USER_NUMBER, COMMENT_DATE)
        VALUES (#{commentNumber}, #{commentContent}, #{qnaNumber}, #{userNumber}, sysdate)
    </insert>

    <select id="selectQnaCommentList" resultType="qnaCommentVo">
        SELECT COMMENT_NUMBER, COMMENT_CONTENT, COMMENT_DATE, QNA_NUMBER, Q.USER_NUMBER,
               USER_ID, USER_BELONG, P.PFP_SYSTEM_NAME, P.PFP_UUID
        FROM WW_USER U JOIN QNA_COMMENT Q
                            ON QNA_NUMBER = #{qnaNumber} AND U.USER_NUMBER = Q.USER_NUMBER
                       LEFT OUTER JOIN USER_PFP P
                                       ON U.USER_NUMBER = P.USER_NUMBER
        WHERE Q.qna_comment_status != '0'
        ORDER BY COMMENT_NUMBER DESC
    </select>

    <select id="findQnaCommentUdList" resultType="qnaCommentVo">
        SELECT Q.COMMENT_NUMBER, Q.COMMENT_CONTENT, Q.COMMENT_DATE, Q.QNA_NUMBER, Q.USER_NUMBER, G.GRADE_NAME, U.USER_NICKNAME,
               U.USER_ID, U.USER_BELONG, P.PFP_SYSTEM_NAME, P.PFP_UUID,
               NVL(CCU.UD_STATUS,'x') AS UD_STATUS
                ,(SELECT COUNT(UD_STATUS) FROM QNA_COMMENT_UD WHERE QNA_COMMENT_UD.COMMENT_NUMBER = Q.COMMENT_NUMBER AND CCU.UD_STATUS = 'u') AS UD_CNT
        FROM WW_USER U JOIN QNA_COMMENT Q
                            ON QNA_NUMBER = #{qnaNumber} AND U.USER_NUMBER = Q.USER_NUMBER
                       LEFT OUTER JOIN QNA_COMMENT_UD CCU
                                       ON Q.COMMENT_NUMBER = CCU.COMMENT_NUMBER
                       LEFT OUTER JOIN USER_PFP P

                       ON Q.USER_NUMBER = P.USER_NUMBER
                       LEFT OUTER JOIN GRADE G
                       ON U.USER_GRADE = G.GRADE_NUMBER
        WHERE Q.qna_comment_status != '0'
        ORDER BY Q.COMMENT_NUMBER DESC
    </select>


    <select id="selectQna" resultType="qnaCommentVo">
        SELECT COMMENT_NUMBER, COMMENT_CONTENT, COMMENT_DATE, QNA_NUMBER, Q.USER_NUMBER,
               USER_ID
        FROM WW_USER U JOIN QNA_COMMENT Q
                            ON COMMENT_NUMBER = #{commentNumber} AND U.USER_NUMBER = Q.USER_NUMBER
    </select>

    <update id="updateQna">
        UPDATE QNA_COMMENT
        SET COMMENT_CONTENT = #{commentContent}, COMMENT_DATE = SYSDATE
        WHERE COMMENT_NUMBER = #{commentNumber}
    </update>

    <!--  댓글 삭제  -->
    <delete id="delete">
        DELETE FROM QNA_COMMENT
        WHERE COMMENT_NUMBER = #{commentNumber}
    </delete>


    <delete id="deleteQna">
        DELETE FROM QNA_COMMENT
        WHERE QNA_NUMBER = #{qnaNumber}
    </delete>
</mapper>